local noobhub = require "noobhub.noobhub"

function init(self)
	msg.post(".", "acquire_input_focus")

	self.debug_message = ""
	
	local latencies = {}

	self.hub = noobhub.new({ server = "46.4.76.236", port = 1337 })

	self.hub:subscribe({
		channel = "ping-channel",
		callback = function(message)  
			print("message received  = "..json.encode(message))
		
			if message.action == "ping" then
				print ("pong sent");
				self.hub:publish({
					message = {
						action  =  "pong",
						id = message.id,
						original_timestamp = message.timestamp,
						timestamp = socket.gettime()
					}
				})
			end
		
			if message.action == "pong" then
				print ("pong id " .. message.id .. " received on " .. socket.gettime() .."; summary:   latency=" .. (socket.gettime() - message.original_timestamp)   )
				table.insert( latencies, ((socket.gettime() - message.original_timestamp)) )
			
				local sum = 0
				local count = 0
				for i, lat in ipairs(latencies) do
					sum = sum + lat
					count =  count + 1
				end
			
				print("---------- "..count..') average =  '..(sum/count)  )
				self.debug_message = "---------- "..count..') average =  '..(sum/count)
			
			end
		end
	})

end

function update(self, dt)
	self.hub:enterFrame()
	msg.post("@render:", "clear_color", { color = vmath.vector4(0.7, 0.7, 1.0, 1) })
	msg.post("@render:", "draw_text", { text = self.debug_message, position = vmath.vector3(20, 100, 0) })
	msg.post("@render:", "draw_text", { text = "Click to send a ping", position = vmath.vector3(20, 40, 0) })
end

function on_input(self, action_id, action)
	if action.released then
		self.hub:publish({
			message = {
				action = "ping",
				id = tostring(socket.gettime()),
				timestamp = socket.gettime()
			}
		})
	end
end

function on_reload(self)
	-- Add reload-handling code here
	-- Remove this function if not needed
end
